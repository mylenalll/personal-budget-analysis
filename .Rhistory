format(bankdata$date, "%Y-%m-%d")
bankdata$date <- format(bankdata$date, "%Y-%m-%d")
bankdata$date <- format(bankdata$date, '%Y-%m-%d')
bankdata$date <- format(bankdata$date, "%d-%m-%Y")
class(bankdata$date)
bankdata$date <- as.Date(bankdata$date)
?as.Date
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z <- as.Date(x, "%d%b%Y")
z
bankdata$date <- as.Date(bankdata$date, "%d%b")
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z <- as.Date(x, "%d%b%Y")
z
lct <- Sys.getlocale("LC_TIME")
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z <- as.Date(x, "%d%b%Y")
bankdata$date <- as.Date(bankdata$date, "%d%b")
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description', select = -c(Type))
colnames(bankdata) <- c('date', 'description', 'paidin', 'paidout')
bankdata$paidin <- gsub("£","",as.character(bankdata$paidin))
bankdata$paidout <- gsub("£","",as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
bankdata$date <- format(bankdata$date, "%d-%m-%Y")
bankdata$date <- as.Date(bankdata$date, "%d%b")
class(bankdata$date)
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description', select = -c(Type))
colnames(bankdata) <- c('date', 'description', 'paidin', 'paidout')
bankdata$paidin <- gsub("£","",as.character(bankdata$paidin))
bankdata$paidout <- gsub("£","",as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
class(bankdata$date)
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
bankdata$date <- as.Date(bankdata$date, "%d%b")
Sys.setlocale("LC_TIME", lct)
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")
z <- as.Date(x, "%d%b%Y")
z
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
bankdata$date <- as.Date(bankdata$date, "%d %b")
Sys.setlocale("LC_TIME", lct)
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description', select = -c(Type))
colnames(bankdata) <- c('date', 'description', 'paidin', 'paidout')
bankdata$paidin <- gsub("£","",as.character(bankdata$paidin))
bankdata$paidout <- gsub("£","",as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
bankdata$date <- as.Date(bankdata$date, "%d %b")
Sys.setlocale("LC_TIME", lct)
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description', select = -c(Type))
colnames(bankdata) <- c('date', 'description', 'paidin', 'paidout')
bankdata$paidin <- gsub("£","",as.character(bankdata$paidin))
bankdata$paidout <- gsub("£","",as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '' | bankdata_raw$Date[i] == 'Date') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description', select = -c(Type))
colnames(bankdata) <- c('date', 'description', 'paidin', 'paidout')
bankdata$paidin <- gsub("£","",as.character(bankdata$paidin))
bankdata$paidout <- gsub("£","",as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '' | bankdata_raw$Date[i] == 'Date' | bankdata_raw$Date[i] == 'Your transactions') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description', select = -c(Type))
colnames(bankdata) <- c('date', 'description', 'paidin', 'paidout')
bankdata$paidin <- gsub("£","",as.character(bankdata$paidin))
bankdata$paidout <- gsub("£","",as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
class(bankdata$date)
lct <- Sys.getlocale("LC_TIME")
bankdata$date <- as.Date(bankdata$date, "%d %b")
class(bankdata$date)
bankdata$date <- format(bankdata$date, "%d-%m-%Y")
library(ggplot2)
# reorder rows ascending date
bankdata <- bankdata[order(date)]
# reorder rows ascending date
bankdata <- bankdata[order(bankdata$date)]
# reorder rows ascending date
bankdata <- bankdata[order(bankdata$date),]
library(ggplot2)
# ==============================================================================
# pre-processing
# ==============================================================================
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
# fill empty date cells
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '' | bankdata_raw$Date[i] == 'Date' | bankdata_raw$Date[i] == 'Your transactions') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
# delete blank and auxiliary rows
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description', select = -c(Type))
# rename cols
colnames(bankdata) <- c('date', 'description', 'paidin', 'paidout')
# remove £ character
bankdata$paidin <- gsub("£", "", as.character(bankdata$paidin))
bankdata$paidout <- gsub("£", "", as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
# data format for date column
class(bankdata$date)
lct <- Sys.getlocale("LC_TIME")
bankdata$date <- as.Date(bankdata$date, "%d %b")
# reorder rows ascending date
bankdata <- bankdata[order(bankdata$date),]
bankdata$date[63]
bankdata$date[63] <- format(bankdata$date[63], "2022-%m-%d")
bankdata$date[63]
bankdata$date[62] == "2023-%m-%d"
bankdata$date[62] == "2023-%m-%d"
bankdata$date[62]
?regexec
regexec("2023-%m-%d", bankdata$date[62])
regexec("2023-%m-%d", bankdata$date[62])
regexec("2022-%m-%d", bankdata$date[62])
regexec("2022-%m-%d", bankdata$date[62])
regexec("2022*", bankdata$date[62])
bankdata$date[62] == "2023-%m-%d"
bankdata$date[62]
grepl("2022*", bankdata$date[62])
grepl("2023*", bankdata$date[62])
grepl("2023-%m-%d", bankdata$date[62])
grepl("2022-%m-%d", bankdata$date[62])
bankdata$date[62]
grepl("2023-%m-%d", bankdata$date[62])
grepl("2023-%m-%d", bankdata$date[62])
grepl("2023-%m-%d", as.character(bankdata$date[62]))
grepl("2023-%m-%d", as.character(bankdata$date[62]))
grepl("2022-%m-%d", as.character(bankdata$date[62]))
grepl("2022-%m-%d", as.character(bankdata$date[62]))
grepl("2022-%m-%d", as.character(bankdata$date[62]))
grepl("2023-%m-%d", as.character(bankdata$date[62]))
grepl("2023", as.character(bankdata$date[62]))
grepl("2022", as.character(bankdata$date[62]))
grepl("2021", as.character(bankdata$date[62]))
grepl("2023", as.character(bankdata$date[62]))
grepl("2023 & 12", as.character(bankdata$date[62]))
grepl("2023.12", as.character(bankdata$date[62]))
grepl("2023.11", as.character(bankdata$date[62]))
grepl("2023.11", as.character(bankdata$date[62]))
setwd("C:/Users/mylen/OneDrive/Изображения/Документы/GitHub/personal-budget-analysis")
library(ggplot2)
library(lubridate)
library(tidyverse)
# ==============================================================================
# pre-processing the first data set
# ==============================================================================
# setwd("C:/Users/mylen/OneDrive/Изображения/Документы/GitHub/personal-budget-analysis")
bankdata_raw <- read.csv("bank-statement.csv", sep = ',')
# fill empty date cells
for (i in 1:nrow(bankdata_raw)) {
if(bankdata_raw$Date[i] == '' | bankdata_raw$Date[i] == 'Date' | bankdata_raw$Date[i] == 'Your transactions') {
bankdata_raw$Date[i] <- bankdata_raw$Date[i-1]
}
}
# delete blank and auxiliary rows
bankdata <- subset(bankdata_raw, Description != '' & Description != 'Description' & Paid.out.... != '', select = -c(Type, Paid.in....))
# rename cols
colnames(bankdata) <- c('date', 'description', 'paidout')
# remove £ character
bankdata$paidout <- gsub("£", "", as.character(bankdata$paidout))
# lower case for description
bankdata$description <- tolower(bankdata$description)
# data format for date column
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
bankdata$date <- as.Date(bankdata$date, "%d %b")
Sys.setlocale("LC_TIME", lct)
# December 2022 was occasionally labeled 2023 by R. fixing it
for (i in 1:nrow(bankdata)) {
if(grepl("2023.12", as.character(bankdata$date[i]))){
year(bankdata$date[i]) <- 2022
}
}
# reorder rows ascending date
bankdata <- bankdata[order(bankdata$date),]
# make money amounts numeric
bankdata$paidout <- as.numeric(bankdata$paidout)
# ==============================================================================
# pre-processing the second data set
# ==============================================================================
revolutdata <- read.csv("transactions_history1.csv", sep = ',')
# delete blank and auxiliary rows
revolutdata <- subset(revolutdata, State != 'Failed' & State != "Declined" & Amount != 0.00, select = -c(Type, State))
# rename cols
colnames(revolutdata) <- c('date', 'description', 'paidout')
# lower case for description
revolutdata$description <- tolower(revolutdata$description)
# delete pay ins. make pay outs positive
revolutdata <- subset(revolutdata, paidout < 0)
revolutdata$paidout <- abs(revolutdata$paidout)
# date format
revolutdata$date <- as.Date(revolutdata$date, "%Y-%m-%d")
# ==============================================================================
# compound of two data sets
# ==============================================================================
totaldata <- rbind(revolutdata, bankdata)
# add a month field for aggregation
totaldata$month <- month(totaldata$date)
# ==============================================================================
# analysis
# ==============================================================================
# 1) food expense
home_food_key <- c("lidl gb partick", "tesco stores", "toogoodtog", "aldi", "sainsburys", "morrison", "spar")
home_food_key_pattern <- paste(home_food_key, collapse = '|')
totaldata$category[grepl(home_food_key_pattern, totaldata$description)] <- "home food"
totaldata_homefood <- subset(totaldata, category == "home food")
# sum of home food expense by month
totaldata_homefood_bymonth <- as.data.frame( totaldata_homefood  %>%
group_by(month = floor_date(date, 'month')) %>%
summarize(sum_of_expenses = sum(paidout)) )
# delete Feb as it isn't complete yet
totaldata_homefood_bymonth <- totaldata_homefood_bymonth[-c(5),]
# format date
totaldata_homefood_bymonth$month <- format(totaldata_homefood_bymonth$month, "%m-%Y")
# 2) nicotine expense
totaldata$category[totaldata$paidout == 5.50 | totaldata$paidout == 11.00 | totaldata$paidout == 6.57 | totaldata$paidout == 13.14 | totaldata$paidout == 7.99] <- "nicotine"
totaldata_nicotine <- subset(totaldata, category == "nicotine")
# sum of nicotine expense by month
totaldata_nicotine_bymonth <- as.data.frame( totaldata_nicotine  %>%
group_by(month = floor_date(date, 'month')) %>%
summarize(sum_of_expenses = sum(paidout)) )
# format date
totaldata_nicotine_bymonth$month <- format(totaldata_nicotine_bymonth$month, "%m-%Y")
# ============= dependencies between nicotine and food expenses ================
# compound two tables
food_and_nicotine <- cbind(totaldata_homefood_bymonth, totaldata_nicotine_bymonth)
food_and_nicotine <- food_and_nicotine[, -c(3)]
colnames(food_and_nicotine) <- c('month', 'food', 'nicotine')
dependence_plot <- ggplot(food_and_nicotine, aes(food, nicotine)) +
geom_point(size = 2, color = "#27ae60") +
geom_smooth(method = "lm", color = "#e67e22", linetype = "dashed", fill = "#f1c40f") +
theme(panel.background = element_blank())
fit <- lm(nicotine ~ food, food_and_nicotine)
summary(fit)
# Multiple R-squared:  0.8503,	Adjusted R-squared:  0.7755
# F-statistic: 11.36 on 1 and 2 DF,  p-value: 0.07788
cor(food_and_nicotine$food, food_and_nicotine$nicotine) #
# 3) transport expense
transport_key <- c("subway", "first glasgow", "mcgill", "tfl travel ch", "lothian", "scotrail")
transport_key_pattern <- paste(transport_key, collapse = '|')
totaldata$category[grepl(transport_key_pattern, totaldata$description)] <- "transport"
# 3) eating out expense
eatout_key <- c("perch and rest", "subway 21963 byres road", "mcdonalds", "greggs", "hinba", "meadow", "yole", "starbucks")
eatout_key_pattern <- paste(eatout_key, collapse = '|')
totaldata$category[grepl(eatout_key_pattern, totaldata$description)] <- "eat out"
# ==============================================================================
# plotting
# ==============================================================================
# monthly food expense
totaldata_homefood_bymonth$month <- factor(totaldata_homefood_bymonth$month, levels = totaldata_homefood_bymonth$month)
plot_food_bymonth <- ggplot(totaldata_homefood_bymonth, aes(month, sum_of_expenses)) +
geom_bar(stat = "identity", fill = "#27ae60") +
geom_hline(aes(yintercept = mean(sum_of_expenses)), col = "#e67e22", size = 1) +
annotate("text", x = 3.5, y = mean(totaldata_homefood_bymonth$sum_of_expenses) + 6, label = mean(totaldata_homefood_bymonth$sum_of_expenses), col = "#e67e22") +
theme(panel.background = element_blank()) +
labs(x = "month", y = "food expense (£)")
# build summary table of monthly spend per class
summary_table <- as.data.frame( totaldata  %>%
group_by(month = floor_date(date, 'month'), category = category) %>%
summarize(sum_of_expenses = sum(paidout)) )
# format date
#summary_table$month <- format(summary_table$month, "%m-%Y")
# delete rows without category
summary_table <- subset(summary_table, is.na(summary_table$category) == F)
str(summary_table)
summary_table$month <- factor(summary_table$month, levels = unique(summary_table$month))
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)")
as.Date(summary_table$month, "%m-%Y")
summary_table_n <- subset(summary_table, summary_table$category == "nicotine")
str(summary_table_n)
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
summary_table_n$month <- as.Date(summary_table_n$month, "%m-%Y")
Sys.setlocale("LC_TIME", lct)
class(summary_table_n$month)
ggplot(summary_table_n, aes(month, sum_of_expenses)) +
geom_smooth(method="loess", se=F) + geom_point()
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)")
summary_table <- as.data.frame( totaldata  %>%
group_by(month = floor_date(date, 'month'), category = category) %>%
summarize(sum_of_expenses = sum(paidout)) )
# delete rows without category
summary_table <- subset(summary_table, is.na(summary_table$category) == F)
str(summary_table)
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2) +
theme(axis.text.x = element_text(angle=45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = "", legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_blank(), legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_blank(), legend.position="none") +
labs(x = "", y = "monthly total (£)") +
scale_x_discrete(labels = c("1" = "Dose 0.5", "2" = "Dose 1", "3" = "Dose 2"))
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_blank(), legend.position="none") +
labs(x = "", y = "monthly total (£)") + xlim("0.5", "2")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_blank(), legend.position="none") +
labs(x = "", y = "monthly total (£)") +
scale_x_continuous(name="Speed of cars", limits=c(0, 5))
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(), legend.position="none") +
labs(x = "", y = "monthly total (£)")
summary_table$month <- factor(summary_table$month, levels = unique(summary_table$month))
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(), legend.position="none") +
labs(x = "", y = "monthly total (£)")
# build summary table of monthly spend per class
summary_table <- as.data.frame( totaldata  %>%
group_by(month = floor_date(date, 'month'), category = category) %>%
summarize(sum_of_expenses = sum(paidout)) )
# delete rows without category
summary_table <- subset(summary_table, is.na(summary_table$category) == F)
View(summary_table)
View(summary_table)
str(summary_table)
# format date
summary_table$month <- format(summary_table$month, "%m-%Y")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(), legend.position="none") +
labs(x = "", y = "monthly total (£)") +
as.Date(summary_table$month, "%m-%Y")
str(summary_table)
as.Date(summary_table$month, "%m-%Y")
as.Date(summary_table$month)
summary_table_n <- subset(summary_table, summary_table$category == "nicotine")
summary_table_n
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
summary_table_n$month <- as.Date(summary_table_n$month, "%m-%Y")
Sys.setlocale("LC_TIME", lct)
summary_table_n
debugSource("~/GitHub/personal-budget-analysis/personal-budget-analysis.R", echo=TRUE)
summary_table_n <- subset(summary_table, summary_table$category == "nicotine")
str(summary_table_n)
class(summary_table_n$month)
class(summary_table_n$month)
summary_table_n$month <- as.Date(summary_table_n$month, "%m-%Y")
summary_table_n
summary_table <- as.data.frame( totaldata  %>%
group_by(month = floor_date(date, 'month'), category = category) %>%
summarize(sum_of_expenses = sum(paidout)) )
summary_table_n <- subset(summary_table, summary_table$category == "nicotine")
summary_table_n
summary_table_n$month <- as.Date(summary_table_n$month, "%m-%Y")
Sys.setlocale("LC_TIME", lct)
class(summary_table_n$month)
ggplot(summary_table_n, aes(month, sum_of_expenses)) +
geom_smooth(method="loess", se=F) + geom_point()
summary_table <- as.data.frame( totaldata  %>%
group_by(month = floor_date(date, 'month'), category = category) %>%
summarize(sum_of_expenses = sum(paidout)) )
summary_table$month <- as.Date(summary_table$month, "%m-%Y")
# delete rows without category
summary_table <- subset(summary_table, is.na(summary_table$category) == F)
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(), legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(factor(month), sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(), legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(factor(month), sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(angle = 45), legend.position="none") +
labs(x = "", y = "monthly total (£)")
ggplot(summary_table, aes(factor(month), sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(angle = 45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)")
# format date
summary_table$month <- as.Date(format(summary_table$month, "%m-%Y"))
ggplot(summary_table_n, aes(month, sum_of_expenses)) +
geom_smooth(method="loess", se=F) + geom_point()
ggplot(summary_table, aes(factor(month), sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(angle = 45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)") +
scale_x_date(date_labels = "%B")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(angle = 45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)") +
scale_x_date(date_labels = "%B")
Sys.setlocale("LC_ALL", "English")
ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(angle = 45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)") +
scale_x_date(date_labels = "%B")
str(summary_table)
str(summary_table)
plot_food_bymonth <- ggplot(totaldata_homefood_bymonth, aes(month, sum_of_expenses)) +
geom_bar(stat = "identity", fill = "#27ae60") +
geom_hline(aes(yintercept = mean(sum_of_expenses)), col = "#e67e22", size = 1) +
annotate("text", x = 3.5, y = mean(totaldata_homefood_bymonth$sum_of_expenses) + 6, label = mean(totaldata_homefood_bymonth$sum_of_expenses), col = "#e67e22") +
theme(panel.background = element_blank()) +
labs(x = "month", y = "food expense (£)")
plot_food_bymonth
summary_plot <- ggplot(summary_table, aes(month, sum_of_expenses, col = category)) +
facet_wrap(~category, ncol=2, scale="free_y") +
geom_smooth(method="loess", se=F) + geom_point(size = 2.5) +
theme(axis.text.x = element_text(angle = 45, hjust=1), legend.position="none") +
labs(x = "", y = "monthly total (£)") +
scale_x_date(date_labels = "%B") +
theme(panel.background = element_blank())
summary_plot
plot_food_bymonth <- ggplot(totaldata_homefood_bymonth, aes(month, sum_of_expenses)) +
geom_bar(stat = "identity", fill = "#27ae60") +
geom_hline(aes(yintercept = mean(sum_of_expenses)), col = "#e67e22", size = 1) +
annotate("text", x = 3.5, y = mean(totaldata_homefood_bymonth$sum_of_expenses) + 6, label = mean(totaldata_homefood_bymonth$sum_of_expenses), col = "#e67e22") +
theme(panel.background = element_blank()) +
labs(x = "month", y = "food expense (£)")
plot_food_bymonth
dependence_plot <- ggplot(food_and_nicotine, aes(food, nicotine)) +
geom_point(size = 2, color = "#27ae60") +
geom_smooth(method = "lm", color = "#e67e22", linetype = "dashed", fill = "#f1c40f") +
theme(panel.background = element_blank())
dependence_plot
View(bankdata_raw)
View(bankdata_raw)
